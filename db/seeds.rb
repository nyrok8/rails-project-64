# frozen_string_literal: true

user1 = User.create!(
  email: 'test@example.org',
  password: '123456',
  password_confirmation: '123456'
)

user2 = User.create!(
  email: 'test2@example.org',
  password: '123456',
  password_confirmation: '123456'
)

category1 = Category.create!(name: 'Кино')
category2 = Category.create!(name: 'Музыка')

post1 = Post.create!(
  title: 'Что такое криптография?',
  body: 'Это может быть не очевидно, но мы сталкиваемся с криптографией каждый день. Например, когда мы оплачиваем покупки картой, смотрим видео на YouTube или заправляем машину, криптография защищает нашу информацию. Может показаться, что криптография – это удел разработчиков, хакеров и корпораций, а простому пользователю знать о ней вовсе не обязательно. Однако это полезно не только узким специалистам, но и всем, кто заботится о собственной безопасности. Этот гайд поможет разобраться, что такое криптография и какое применение она находит в повседневной жизни.',
  category: category1,
  creator: user1
)

Post.create!(
  title: 'Что такое динамическое программирование',
  body: 'Работу разработчика часто можно сравнить с решением головоломок. Как в настоящей головоломке, разработчику приходится тратить существенные ресурсы не столько на реализацию конкретного решения, сколько на выбор оптимального подхода. Иногда задача решается легко и эффективно, а порой — только полным перебором всех возможных вариантов. Такой подход часто называют наивным решением. Он имеет существенный минус — временные затраты. \n Представим хакера, который пытается взломать какой-то пароль перебором всех комбинаций символов. Если пароль допускает 10 цифр, 26 маленьких букв, 26 больших букв и 32 специальных символа (например, значок доллара), то для каждого символа в пароле есть 94 кандидата. Значит, чтобы взломать перебором пароль, состоящий из одного символа, потребуется 94 проверки. Если в пароле два символа — 94 кандидата на первую позицию, 94 кандидата на вторую позицию — то придется перебрать аж 94*94 = 8836 возможных пар. Для пароля из десяти символов потребуется уже перебор 94^10 комбинаций.',
  category: category2,
  creator: user2
)

PostLike.create!(post: post1, user: user1)
PostLike.create!(post: post1, user: user2)

PostComment.create!(
  content: 'first',
  user: user1,
  post: post1
)

comment_with_comments = PostComment.create!(
  content: 'this is comment with comments',
  user: user1,
  post: post1
)

commented_comment = PostComment.create!(
  content: 'commented comment',
  user: user1,
  post: post1,
  parent: comment_with_comments
)

PostComment.create!(
  content: 'deep comment',
  user: user1,
  post: post1,
  parent: commented_comment
)
